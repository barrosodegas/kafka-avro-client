/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.barroso.kafka.avroclient.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Invoice extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8443020749085974291L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Invoice\",\"namespace\":\"br.com.barroso.kafka.avroclient.avro\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Payment code.\"},{\"name\":\"payment\",\"type\":{\"type\":\"record\",\"name\":\"Payment\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Payment code.\"},{\"name\":\"order\",\"type\":{\"type\":\"record\",\"name\":\"Order\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Order code.\"},{\"name\":\"customer\",\"type\":{\"type\":\"record\",\"name\":\"Customer\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Customer code.\"},{\"name\":\"first_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Customer first name.\"},{\"name\":\"last_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Customer last code.\"},{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Customer email.\",\"default\":null}]},\"doc\":\"Customer.\"},{\"name\":\"products\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Product\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Product code.\"},{\"name\":\"product_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Product name.\"},{\"name\":\"product_price\",\"type\":\"double\",\"doc\":\"Product price.\"},{\"name\":\"product_amount\",\"type\":\"int\",\"doc\":\"Product amount.\",\"default\":1}]}},\"doc\":\"Product list.\"}]},\"doc\":\"Customer order.\"},{\"name\":\"total_quantity\",\"type\":\"int\",\"doc\":\"Total order quantity.\"},{\"name\":\"total_value\",\"type\":\"double\",\"doc\":\"Total order value.\"}]},\"doc\":\"Order payment.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Invoice> ENCODER =
      new BinaryMessageEncoder<Invoice>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Invoice> DECODER =
      new BinaryMessageDecoder<Invoice>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Invoice> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Invoice> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Invoice>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Invoice to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Invoice from a ByteBuffer. */
  public static Invoice fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Payment code. */
   private java.lang.String code;
  /** Order payment. */
   private br.com.barroso.kafka.avroclient.avro.Payment payment;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Invoice() {}

  /**
   * All-args constructor.
   * @param code Payment code.
   * @param payment Order payment.
   */
  public Invoice(java.lang.String code, br.com.barroso.kafka.avroclient.avro.Payment payment) {
    this.code = code;
    this.payment = payment;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return code;
    case 1: return payment;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: code = (java.lang.String)value$; break;
    case 1: payment = (br.com.barroso.kafka.avroclient.avro.Payment)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'code' field.
   * @return Payment code.
   */
  public java.lang.String getCode() {
    return code;
  }


  /**
   * Gets the value of the 'payment' field.
   * @return Order payment.
   */
  public br.com.barroso.kafka.avroclient.avro.Payment getPayment() {
    return payment;
  }


  /**
   * Creates a new Invoice RecordBuilder.
   * @return A new Invoice RecordBuilder
   */
  public static br.com.barroso.kafka.avroclient.avro.Invoice.Builder newBuilder() {
    return new br.com.barroso.kafka.avroclient.avro.Invoice.Builder();
  }

  /**
   * Creates a new Invoice RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Invoice RecordBuilder
   */
  public static br.com.barroso.kafka.avroclient.avro.Invoice.Builder newBuilder(br.com.barroso.kafka.avroclient.avro.Invoice.Builder other) {
    return new br.com.barroso.kafka.avroclient.avro.Invoice.Builder(other);
  }

  /**
   * Creates a new Invoice RecordBuilder by copying an existing Invoice instance.
   * @param other The existing instance to copy.
   * @return A new Invoice RecordBuilder
   */
  public static br.com.barroso.kafka.avroclient.avro.Invoice.Builder newBuilder(br.com.barroso.kafka.avroclient.avro.Invoice other) {
    return new br.com.barroso.kafka.avroclient.avro.Invoice.Builder(other);
  }

  /**
   * RecordBuilder for Invoice instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Invoice>
    implements org.apache.avro.data.RecordBuilder<Invoice> {

    /** Payment code. */
    private java.lang.String code;
    /** Order payment. */
    private br.com.barroso.kafka.avroclient.avro.Payment payment;
    private br.com.barroso.kafka.avroclient.avro.Payment.Builder paymentBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.barroso.kafka.avroclient.avro.Invoice.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.payment)) {
        this.payment = data().deepCopy(fields()[1].schema(), other.payment);
        fieldSetFlags()[1] = true;
      }
      if (other.hasPaymentBuilder()) {
        this.paymentBuilder = br.com.barroso.kafka.avroclient.avro.Payment.newBuilder(other.getPaymentBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Invoice instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.barroso.kafka.avroclient.avro.Invoice other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.payment)) {
        this.payment = data().deepCopy(fields()[1].schema(), other.payment);
        fieldSetFlags()[1] = true;
      }
      this.paymentBuilder = null;
    }

    /**
      * Gets the value of the 'code' field.
      * Payment code.
      * @return The value.
      */
    public java.lang.String getCode() {
      return code;
    }

    /**
      * Sets the value of the 'code' field.
      * Payment code.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public br.com.barroso.kafka.avroclient.avro.Invoice.Builder setCode(java.lang.String value) {
      validate(fields()[0], value);
      this.code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * Payment code.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'code' field.
      * Payment code.
      * @return This builder.
      */
    public br.com.barroso.kafka.avroclient.avro.Invoice.Builder clearCode() {
      code = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'payment' field.
      * Order payment.
      * @return The value.
      */
    public br.com.barroso.kafka.avroclient.avro.Payment getPayment() {
      return payment;
    }

    /**
      * Sets the value of the 'payment' field.
      * Order payment.
      * @param value The value of 'payment'.
      * @return This builder.
      */
    public br.com.barroso.kafka.avroclient.avro.Invoice.Builder setPayment(br.com.barroso.kafka.avroclient.avro.Payment value) {
      validate(fields()[1], value);
      this.paymentBuilder = null;
      this.payment = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'payment' field has been set.
      * Order payment.
      * @return True if the 'payment' field has been set, false otherwise.
      */
    public boolean hasPayment() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'payment' field and creates one if it doesn't exist yet.
     * Order payment.
     * @return This builder.
     */
    public br.com.barroso.kafka.avroclient.avro.Payment.Builder getPaymentBuilder() {
      if (paymentBuilder == null) {
        if (hasPayment()) {
          setPaymentBuilder(br.com.barroso.kafka.avroclient.avro.Payment.newBuilder(payment));
        } else {
          setPaymentBuilder(br.com.barroso.kafka.avroclient.avro.Payment.newBuilder());
        }
      }
      return paymentBuilder;
    }

    /**
     * Sets the Builder instance for the 'payment' field
     * Order payment.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public br.com.barroso.kafka.avroclient.avro.Invoice.Builder setPaymentBuilder(br.com.barroso.kafka.avroclient.avro.Payment.Builder value) {
      clearPayment();
      paymentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'payment' field has an active Builder instance
     * Order payment.
     * @return True if the 'payment' field has an active Builder instance
     */
    public boolean hasPaymentBuilder() {
      return paymentBuilder != null;
    }

    /**
      * Clears the value of the 'payment' field.
      * Order payment.
      * @return This builder.
      */
    public br.com.barroso.kafka.avroclient.avro.Invoice.Builder clearPayment() {
      payment = null;
      paymentBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Invoice build() {
      try {
        Invoice record = new Invoice();
        record.code = fieldSetFlags()[0] ? this.code : (java.lang.String) defaultValue(fields()[0]);
        if (paymentBuilder != null) {
          record.payment = this.paymentBuilder.build();
        } else {
          record.payment = fieldSetFlags()[1] ? this.payment : (br.com.barroso.kafka.avroclient.avro.Payment) defaultValue(fields()[1]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Invoice>
    WRITER$ = (org.apache.avro.io.DatumWriter<Invoice>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Invoice>
    READER$ = (org.apache.avro.io.DatumReader<Invoice>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
